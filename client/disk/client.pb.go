// Code generated by protoc-gen-go.
// source: github.com/agl/pond/client/disk/client.proto
// DO NOT EDIT!

package disk

import proto "github.com/golang/protobuf/proto"
import json "encoding/json"
import math "math"
import protos "github.com/agl/pond/protos"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Header struct {
	NonceSmearCopies *int32         `protobuf:"varint,1,opt,name=nonce_smear_copies,def=1365" json:"nonce_smear_copies,omitempty"`
	KdfSalt          []byte         `protobuf:"bytes,2,opt,name=kdf_salt" json:"kdf_salt,omitempty"`
	Scrypt           *Header_SCrypt `protobuf:"bytes,3,opt,name=scrypt" json:"scrypt,omitempty"`
	TpmNvram         *Header_TPM    `protobuf:"bytes,4,opt,name=tpm_nvram" json:"tpm_nvram,omitempty"`
	NoErasureStorage *bool          `protobuf:"varint,5,opt,name=no_erasure_storage" json:"no_erasure_storage,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (this *Header) Reset()         { *this = Header{} }
func (this *Header) String() string { return proto.CompactTextString(this) }
func (*Header) ProtoMessage()       {}

const Default_Header_NonceSmearCopies int32 = 1365

func (this *Header) GetNonceSmearCopies() int32 {
	if this != nil && this.NonceSmearCopies != nil {
		return *this.NonceSmearCopies
	}
	return Default_Header_NonceSmearCopies
}

func (this *Header) GetKdfSalt() []byte {
	if this != nil {
		return this.KdfSalt
	}
	return nil
}

func (this *Header) GetScrypt() *Header_SCrypt {
	if this != nil {
		return this.Scrypt
	}
	return nil
}

func (this *Header) GetTpmNvram() *Header_TPM {
	if this != nil {
		return this.TpmNvram
	}
	return nil
}

func (this *Header) GetNoErasureStorage() bool {
	if this != nil && this.NoErasureStorage != nil {
		return *this.NoErasureStorage
	}
	return false
}

type Header_SCrypt struct {
	N                *int32 `protobuf:"varint,2,opt,def=32768" json:"N,omitempty"`
	R                *int32 `protobuf:"varint,3,opt,name=r,def=16" json:"r,omitempty"`
	P                *int32 `protobuf:"varint,4,opt,name=p,def=1" json:"p,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (this *Header_SCrypt) Reset()         { *this = Header_SCrypt{} }
func (this *Header_SCrypt) String() string { return proto.CompactTextString(this) }
func (*Header_SCrypt) ProtoMessage()       {}

const Default_Header_SCrypt_N int32 = 32768
const Default_Header_SCrypt_R int32 = 16
const Default_Header_SCrypt_P int32 = 1

func (this *Header_SCrypt) GetN() int32 {
	if this != nil && this.N != nil {
		return *this.N
	}
	return Default_Header_SCrypt_N
}

func (this *Header_SCrypt) GetR() int32 {
	if this != nil && this.R != nil {
		return *this.R
	}
	return Default_Header_SCrypt_R
}

func (this *Header_SCrypt) GetP() int32 {
	if this != nil && this.P != nil {
		return *this.P
	}
	return Default_Header_SCrypt_P
}

type Header_TPM struct {
	Index            *uint32 `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *Header_TPM) Reset()         { *this = Header_TPM{} }
func (this *Header_TPM) String() string { return proto.CompactTextString(this) }
func (*Header_TPM) ProtoMessage()       {}

func (this *Header_TPM) GetIndex() uint32 {
	if this != nil && this.Index != nil {
		return *this.Index
	}
	return 0
}

type Contact struct {
	Id                  *uint64                `protobuf:"fixed64,1,req,name=id" json:"id,omitempty"`
	Name                *string                `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	GroupKey            []byte                 `protobuf:"bytes,3,req,name=group_key" json:"group_key,omitempty"`
	SupportedVersion    *int32                 `protobuf:"varint,16,opt,name=supported_version" json:"supported_version,omitempty"`
	KeyExchangeBytes    []byte                 `protobuf:"bytes,4,opt,name=key_exchange_bytes" json:"key_exchange_bytes,omitempty"`
	PandaKeyExchange    []byte                 `protobuf:"bytes,18,opt,name=panda_key_exchange" json:"panda_key_exchange,omitempty"`
	PandaError          *string                `protobuf:"bytes,19,opt,name=panda_error" json:"panda_error,omitempty"`
	TheirGroup          []byte                 `protobuf:"bytes,5,opt,name=their_group" json:"their_group,omitempty"`
	MyGroupKey          []byte                 `protobuf:"bytes,6,opt,name=my_group_key" json:"my_group_key,omitempty"`
	Generation          *uint32                `protobuf:"varint,7,opt,name=generation" json:"generation,omitempty"`
	TheirServer         *string                `protobuf:"bytes,8,opt,name=their_server" json:"their_server,omitempty"`
	TheirPub            []byte                 `protobuf:"bytes,9,opt,name=their_pub" json:"their_pub,omitempty"`
	TheirIdentityPublic []byte                 `protobuf:"bytes,10,opt,name=their_identity_public" json:"their_identity_public,omitempty"`
	RevokedUs           *bool                  `protobuf:"varint,21,opt,name=revoked_us" json:"revoked_us,omitempty"`
	LastPrivate         []byte                 `protobuf:"bytes,11,opt,name=last_private" json:"last_private,omitempty"`
	CurrentPrivate      []byte                 `protobuf:"bytes,12,opt,name=current_private" json:"current_private,omitempty"`
	TheirLastPublic     []byte                 `protobuf:"bytes,13,opt,name=their_last_public" json:"their_last_public,omitempty"`
	TheirCurrentPublic  []byte                 `protobuf:"bytes,14,opt,name=their_current_public" json:"their_current_public,omitempty"`
	Ratchet             *RatchetState          `protobuf:"bytes,20,opt,name=ratchet" json:"ratchet,omitempty"`
	PreviousTags        []*Contact_PreviousTag `protobuf:"bytes,17,rep,name=previous_tags" json:"previous_tags,omitempty"`
	Events              []*Contact_Event       `protobuf:"bytes,22,rep,name=events" json:"events,omitempty"`
	IsPending           *bool                  `protobuf:"varint,15,opt,name=is_pending,def=0" json:"is_pending,omitempty"`
	XXX_unrecognized    []byte                 `json:"-"`
}

func (this *Contact) Reset()         { *this = Contact{} }
func (this *Contact) String() string { return proto.CompactTextString(this) }
func (*Contact) ProtoMessage()       {}

const Default_Contact_IsPending bool = false

func (this *Contact) GetId() uint64 {
	if this != nil && this.Id != nil {
		return *this.Id
	}
	return 0
}

func (this *Contact) GetName() string {
	if this != nil && this.Name != nil {
		return *this.Name
	}
	return ""
}

func (this *Contact) GetGroupKey() []byte {
	if this != nil {
		return this.GroupKey
	}
	return nil
}

func (this *Contact) GetSupportedVersion() int32 {
	if this != nil && this.SupportedVersion != nil {
		return *this.SupportedVersion
	}
	return 0
}

func (this *Contact) GetKeyExchangeBytes() []byte {
	if this != nil {
		return this.KeyExchangeBytes
	}
	return nil
}

func (this *Contact) GetPandaKeyExchange() []byte {
	if this != nil {
		return this.PandaKeyExchange
	}
	return nil
}

func (this *Contact) GetPandaError() string {
	if this != nil && this.PandaError != nil {
		return *this.PandaError
	}
	return ""
}

func (this *Contact) GetTheirGroup() []byte {
	if this != nil {
		return this.TheirGroup
	}
	return nil
}

func (this *Contact) GetMyGroupKey() []byte {
	if this != nil {
		return this.MyGroupKey
	}
	return nil
}

func (this *Contact) GetGeneration() uint32 {
	if this != nil && this.Generation != nil {
		return *this.Generation
	}
	return 0
}

func (this *Contact) GetTheirServer() string {
	if this != nil && this.TheirServer != nil {
		return *this.TheirServer
	}
	return ""
}

func (this *Contact) GetTheirPub() []byte {
	if this != nil {
		return this.TheirPub
	}
	return nil
}

func (this *Contact) GetTheirIdentityPublic() []byte {
	if this != nil {
		return this.TheirIdentityPublic
	}
	return nil
}

func (this *Contact) GetRevokedUs() bool {
	if this != nil && this.RevokedUs != nil {
		return *this.RevokedUs
	}
	return false
}

func (this *Contact) GetLastPrivate() []byte {
	if this != nil {
		return this.LastPrivate
	}
	return nil
}

func (this *Contact) GetCurrentPrivate() []byte {
	if this != nil {
		return this.CurrentPrivate
	}
	return nil
}

func (this *Contact) GetTheirLastPublic() []byte {
	if this != nil {
		return this.TheirLastPublic
	}
	return nil
}

func (this *Contact) GetTheirCurrentPublic() []byte {
	if this != nil {
		return this.TheirCurrentPublic
	}
	return nil
}

func (this *Contact) GetRatchet() *RatchetState {
	if this != nil {
		return this.Ratchet
	}
	return nil
}

func (this *Contact) GetPreviousTags() []*Contact_PreviousTag {
	if this != nil {
		return this.PreviousTags
	}
	return nil
}

func (this *Contact) GetEvents() []*Contact_Event {
	if this != nil {
		return this.Events
	}
	return nil
}

func (this *Contact) GetIsPending() bool {
	if this != nil && this.IsPending != nil {
		return *this.IsPending
	}
	return Default_Contact_IsPending
}

type Contact_PreviousTag struct {
	Tag              []byte `protobuf:"bytes,1,req,name=tag" json:"tag,omitempty"`
	Expired          *int64 `protobuf:"varint,2,req,name=expired" json:"expired,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (this *Contact_PreviousTag) Reset()         { *this = Contact_PreviousTag{} }
func (this *Contact_PreviousTag) String() string { return proto.CompactTextString(this) }
func (*Contact_PreviousTag) ProtoMessage()       {}

func (this *Contact_PreviousTag) GetTag() []byte {
	if this != nil {
		return this.Tag
	}
	return nil
}

func (this *Contact_PreviousTag) GetExpired() int64 {
	if this != nil && this.Expired != nil {
		return *this.Expired
	}
	return 0
}

type Contact_Event struct {
	Time             *int64  `protobuf:"varint,1,req,name=time" json:"time,omitempty"`
	Message          *string `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *Contact_Event) Reset()         { *this = Contact_Event{} }
func (this *Contact_Event) String() string { return proto.CompactTextString(this) }
func (*Contact_Event) ProtoMessage()       {}

func (this *Contact_Event) GetTime() int64 {
	if this != nil && this.Time != nil {
		return *this.Time
	}
	return 0
}

func (this *Contact_Event) GetMessage() string {
	if this != nil && this.Message != nil {
		return *this.Message
	}
	return ""
}

type RatchetState struct {
	RootKey            []byte                    `protobuf:"bytes,1,req,name=root_key" json:"root_key,omitempty"`
	SendHeaderKey      []byte                    `protobuf:"bytes,2,req,name=send_header_key" json:"send_header_key,omitempty"`
	RecvHeaderKey      []byte                    `protobuf:"bytes,3,req,name=recv_header_key" json:"recv_header_key,omitempty"`
	NextSendHeaderKey  []byte                    `protobuf:"bytes,4,req,name=next_send_header_key" json:"next_send_header_key,omitempty"`
	NextRecvHeaderKey  []byte                    `protobuf:"bytes,5,req,name=next_recv_header_key" json:"next_recv_header_key,omitempty"`
	SendChainKey       []byte                    `protobuf:"bytes,6,req,name=send_chain_key" json:"send_chain_key,omitempty"`
	RecvChainKey       []byte                    `protobuf:"bytes,7,req,name=recv_chain_key" json:"recv_chain_key,omitempty"`
	SendRatchetPrivate []byte                    `protobuf:"bytes,8,req,name=send_ratchet_private" json:"send_ratchet_private,omitempty"`
	RecvRatchetPublic  []byte                    `protobuf:"bytes,9,req,name=recv_ratchet_public" json:"recv_ratchet_public,omitempty"`
	SendCount          *uint32                   `protobuf:"varint,10,req,name=send_count" json:"send_count,omitempty"`
	RecvCount          *uint32                   `protobuf:"varint,11,req,name=recv_count" json:"recv_count,omitempty"`
	PrevSendCount      *uint32                   `protobuf:"varint,12,req,name=prev_send_count" json:"prev_send_count,omitempty"`
	Ratchet            *bool                     `protobuf:"varint,13,req,name=ratchet" json:"ratchet,omitempty"`
	V2                 *bool                     `protobuf:"varint,17,opt,name=v2" json:"v2,omitempty"`
	Private0           []byte                    `protobuf:"bytes,14,opt,name=private0" json:"private0,omitempty"`
	Private1           []byte                    `protobuf:"bytes,15,opt,name=private1" json:"private1,omitempty"`
	SavedKeys          []*RatchetState_SavedKeys `protobuf:"bytes,16,rep,name=saved_keys" json:"saved_keys,omitempty"`
	XXX_unrecognized   []byte                    `json:"-"`
}

func (this *RatchetState) Reset()         { *this = RatchetState{} }
func (this *RatchetState) String() string { return proto.CompactTextString(this) }
func (*RatchetState) ProtoMessage()       {}

func (this *RatchetState) GetRootKey() []byte {
	if this != nil {
		return this.RootKey
	}
	return nil
}

func (this *RatchetState) GetSendHeaderKey() []byte {
	if this != nil {
		return this.SendHeaderKey
	}
	return nil
}

func (this *RatchetState) GetRecvHeaderKey() []byte {
	if this != nil {
		return this.RecvHeaderKey
	}
	return nil
}

func (this *RatchetState) GetNextSendHeaderKey() []byte {
	if this != nil {
		return this.NextSendHeaderKey
	}
	return nil
}

func (this *RatchetState) GetNextRecvHeaderKey() []byte {
	if this != nil {
		return this.NextRecvHeaderKey
	}
	return nil
}

func (this *RatchetState) GetSendChainKey() []byte {
	if this != nil {
		return this.SendChainKey
	}
	return nil
}

func (this *RatchetState) GetRecvChainKey() []byte {
	if this != nil {
		return this.RecvChainKey
	}
	return nil
}

func (this *RatchetState) GetSendRatchetPrivate() []byte {
	if this != nil {
		return this.SendRatchetPrivate
	}
	return nil
}

func (this *RatchetState) GetRecvRatchetPublic() []byte {
	if this != nil {
		return this.RecvRatchetPublic
	}
	return nil
}

func (this *RatchetState) GetSendCount() uint32 {
	if this != nil && this.SendCount != nil {
		return *this.SendCount
	}
	return 0
}

func (this *RatchetState) GetRecvCount() uint32 {
	if this != nil && this.RecvCount != nil {
		return *this.RecvCount
	}
	return 0
}

func (this *RatchetState) GetPrevSendCount() uint32 {
	if this != nil && this.PrevSendCount != nil {
		return *this.PrevSendCount
	}
	return 0
}

func (this *RatchetState) GetRatchet() bool {
	if this != nil && this.Ratchet != nil {
		return *this.Ratchet
	}
	return false
}

func (this *RatchetState) GetV2() bool {
	if this != nil && this.V2 != nil {
		return *this.V2
	}
	return false
}

func (this *RatchetState) GetPrivate0() []byte {
	if this != nil {
		return this.Private0
	}
	return nil
}

func (this *RatchetState) GetPrivate1() []byte {
	if this != nil {
		return this.Private1
	}
	return nil
}

func (this *RatchetState) GetSavedKeys() []*RatchetState_SavedKeys {
	if this != nil {
		return this.SavedKeys
	}
	return nil
}

type RatchetState_SavedKeys struct {
	HeaderKey        []byte                               `protobuf:"bytes,1,req,name=header_key" json:"header_key,omitempty"`
	MessageKeys      []*RatchetState_SavedKeys_MessageKey `protobuf:"bytes,2,rep,name=message_keys" json:"message_keys,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (this *RatchetState_SavedKeys) Reset()         { *this = RatchetState_SavedKeys{} }
func (this *RatchetState_SavedKeys) String() string { return proto.CompactTextString(this) }
func (*RatchetState_SavedKeys) ProtoMessage()       {}

func (this *RatchetState_SavedKeys) GetHeaderKey() []byte {
	if this != nil {
		return this.HeaderKey
	}
	return nil
}

func (this *RatchetState_SavedKeys) GetMessageKeys() []*RatchetState_SavedKeys_MessageKey {
	if this != nil {
		return this.MessageKeys
	}
	return nil
}

type RatchetState_SavedKeys_MessageKey struct {
	Num              *uint32 `protobuf:"varint,1,req,name=num" json:"num,omitempty"`
	Key              []byte  `protobuf:"bytes,2,req,name=key" json:"key,omitempty"`
	CreationTime     *int64  `protobuf:"varint,3,req,name=creation_time" json:"creation_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *RatchetState_SavedKeys_MessageKey) Reset()         { *this = RatchetState_SavedKeys_MessageKey{} }
func (this *RatchetState_SavedKeys_MessageKey) String() string { return proto.CompactTextString(this) }
func (*RatchetState_SavedKeys_MessageKey) ProtoMessage()       {}

func (this *RatchetState_SavedKeys_MessageKey) GetNum() uint32 {
	if this != nil && this.Num != nil {
		return *this.Num
	}
	return 0
}

func (this *RatchetState_SavedKeys_MessageKey) GetKey() []byte {
	if this != nil {
		return this.Key
	}
	return nil
}

func (this *RatchetState_SavedKeys_MessageKey) GetCreationTime() int64 {
	if this != nil && this.CreationTime != nil {
		return *this.CreationTime
	}
	return 0
}

type Inbox struct {
	Id               *uint64 `protobuf:"fixed64,1,req,name=id" json:"id,omitempty"`
	From             *uint64 `protobuf:"fixed64,2,req,name=from" json:"from,omitempty"`
	ReceivedTime     *int64  `protobuf:"varint,3,req,name=received_time" json:"received_time,omitempty"`
	Acked            *bool   `protobuf:"varint,4,req,name=acked" json:"acked,omitempty"`
	Message          []byte  `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	Read             *bool   `protobuf:"varint,6,req,name=read" json:"read,omitempty"`
	Sealed           []byte  `protobuf:"bytes,7,opt,name=sealed" json:"sealed,omitempty"`
	Retained         *bool   `protobuf:"varint,8,opt,name=retained,def=0" json:"retained,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *Inbox) Reset()         { *this = Inbox{} }
func (this *Inbox) String() string { return proto.CompactTextString(this) }
func (*Inbox) ProtoMessage()       {}

const Default_Inbox_Retained bool = false

func (this *Inbox) GetId() uint64 {
	if this != nil && this.Id != nil {
		return *this.Id
	}
	return 0
}

func (this *Inbox) GetFrom() uint64 {
	if this != nil && this.From != nil {
		return *this.From
	}
	return 0
}

func (this *Inbox) GetReceivedTime() int64 {
	if this != nil && this.ReceivedTime != nil {
		return *this.ReceivedTime
	}
	return 0
}

func (this *Inbox) GetAcked() bool {
	if this != nil && this.Acked != nil {
		return *this.Acked
	}
	return false
}

func (this *Inbox) GetMessage() []byte {
	if this != nil {
		return this.Message
	}
	return nil
}

func (this *Inbox) GetRead() bool {
	if this != nil && this.Read != nil {
		return *this.Read
	}
	return false
}

func (this *Inbox) GetSealed() []byte {
	if this != nil {
		return this.Sealed
	}
	return nil
}

func (this *Inbox) GetRetained() bool {
	if this != nil && this.Retained != nil {
		return *this.Retained
	}
	return Default_Inbox_Retained
}

type Outbox struct {
	Id               *uint64 `protobuf:"fixed64,1,req,name=id" json:"id,omitempty"`
	To               *uint64 `protobuf:"fixed64,2,req,name=to" json:"to,omitempty"`
	Server           *string `protobuf:"bytes,3,req,name=server" json:"server,omitempty"`
	Created          *int64  `protobuf:"varint,4,req,name=created" json:"created,omitempty"`
	Sent             *int64  `protobuf:"varint,5,opt,name=sent" json:"sent,omitempty"`
	Message          []byte  `protobuf:"bytes,6,opt,name=message" json:"message,omitempty"`
	Request          []byte  `protobuf:"bytes,7,opt,name=request" json:"request,omitempty"`
	Acked            *int64  `protobuf:"varint,8,opt,name=acked" json:"acked,omitempty"`
	Revocation       *bool   `protobuf:"varint,9,opt,name=revocation" json:"revocation,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *Outbox) Reset()         { *this = Outbox{} }
func (this *Outbox) String() string { return proto.CompactTextString(this) }
func (*Outbox) ProtoMessage()       {}

func (this *Outbox) GetId() uint64 {
	if this != nil && this.Id != nil {
		return *this.Id
	}
	return 0
}

func (this *Outbox) GetTo() uint64 {
	if this != nil && this.To != nil {
		return *this.To
	}
	return 0
}

func (this *Outbox) GetServer() string {
	if this != nil && this.Server != nil {
		return *this.Server
	}
	return ""
}

func (this *Outbox) GetCreated() int64 {
	if this != nil && this.Created != nil {
		return *this.Created
	}
	return 0
}

func (this *Outbox) GetSent() int64 {
	if this != nil && this.Sent != nil {
		return *this.Sent
	}
	return 0
}

func (this *Outbox) GetMessage() []byte {
	if this != nil {
		return this.Message
	}
	return nil
}

func (this *Outbox) GetRequest() []byte {
	if this != nil {
		return this.Request
	}
	return nil
}

func (this *Outbox) GetAcked() int64 {
	if this != nil && this.Acked != nil {
		return *this.Acked
	}
	return 0
}

func (this *Outbox) GetRevocation() bool {
	if this != nil && this.Revocation != nil {
		return *this.Revocation
	}
	return false
}

type Draft struct {
	Id               *uint64                      `protobuf:"fixed64,1,req,name=id" json:"id,omitempty"`
	Created          *int64                       `protobuf:"varint,2,req,name=created" json:"created,omitempty"`
	To               *uint64                      `protobuf:"fixed64,3,opt,name=to" json:"to,omitempty"`
	Body             *string                      `protobuf:"bytes,4,req,name=body" json:"body,omitempty"`
	InReplyTo        *uint64                      `protobuf:"fixed64,5,opt,name=in_reply_to" json:"in_reply_to,omitempty"`
	Attachments      []*protos.Message_Attachment `protobuf:"bytes,6,rep,name=attachments" json:"attachments,omitempty"`
	Detachments      []*protos.Message_Detachment `protobuf:"bytes,7,rep,name=detachments" json:"detachments,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (this *Draft) Reset()         { *this = Draft{} }
func (this *Draft) String() string { return proto.CompactTextString(this) }
func (*Draft) ProtoMessage()       {}

func (this *Draft) GetId() uint64 {
	if this != nil && this.Id != nil {
		return *this.Id
	}
	return 0
}

func (this *Draft) GetCreated() int64 {
	if this != nil && this.Created != nil {
		return *this.Created
	}
	return 0
}

func (this *Draft) GetTo() uint64 {
	if this != nil && this.To != nil {
		return *this.To
	}
	return 0
}

func (this *Draft) GetBody() string {
	if this != nil && this.Body != nil {
		return *this.Body
	}
	return ""
}

func (this *Draft) GetInReplyTo() uint64 {
	if this != nil && this.InReplyTo != nil {
		return *this.InReplyTo
	}
	return 0
}

func (this *Draft) GetAttachments() []*protos.Message_Attachment {
	if this != nil {
		return this.Attachments
	}
	return nil
}

func (this *Draft) GetDetachments() []*protos.Message_Detachment {
	if this != nil {
		return this.Detachments
	}
	return nil
}

type State struct {
	Identity                 []byte                 `protobuf:"bytes,1,req,name=identity" json:"identity,omitempty"`
	Public                   []byte                 `protobuf:"bytes,2,req,name=public" json:"public,omitempty"`
	Private                  []byte                 `protobuf:"bytes,3,req,name=private" json:"private,omitempty"`
	Server                   *string                `protobuf:"bytes,4,req,name=server" json:"server,omitempty"`
	Group                    []byte                 `protobuf:"bytes,5,req,name=group" json:"group,omitempty"`
	GroupPrivate             []byte                 `protobuf:"bytes,6,req,name=group_private" json:"group_private,omitempty"`
	PreviousGroupPrivateKeys []*State_PreviousGroup `protobuf:"bytes,12,rep,name=previous_group_private_keys" json:"previous_group_private_keys,omitempty"`
	Generation               *uint32                `protobuf:"varint,7,req,name=generation" json:"generation,omitempty"`
	LastErasureStorageTime   *int64                 `protobuf:"varint,13,opt,name=last_erasure_storage_time" json:"last_erasure_storage_time,omitempty"`
	Contacts                 []*Contact             `protobuf:"bytes,8,rep,name=contacts" json:"contacts,omitempty"`
	Inbox                    []*Inbox               `protobuf:"bytes,9,rep,name=inbox" json:"inbox,omitempty"`
	Outbox                   []*Outbox              `protobuf:"bytes,10,rep,name=outbox" json:"outbox,omitempty"`
	Drafts                   []*Draft               `protobuf:"bytes,11,rep,name=drafts" json:"drafts,omitempty"`
	XXX_unrecognized         []byte                 `json:"-"`
}

func (this *State) Reset()         { *this = State{} }
func (this *State) String() string { return proto.CompactTextString(this) }
func (*State) ProtoMessage()       {}

func (this *State) GetIdentity() []byte {
	if this != nil {
		return this.Identity
	}
	return nil
}

func (this *State) GetPublic() []byte {
	if this != nil {
		return this.Public
	}
	return nil
}

func (this *State) GetPrivate() []byte {
	if this != nil {
		return this.Private
	}
	return nil
}

func (this *State) GetServer() string {
	if this != nil && this.Server != nil {
		return *this.Server
	}
	return ""
}

func (this *State) GetGroup() []byte {
	if this != nil {
		return this.Group
	}
	return nil
}

func (this *State) GetGroupPrivate() []byte {
	if this != nil {
		return this.GroupPrivate
	}
	return nil
}

func (this *State) GetPreviousGroupPrivateKeys() []*State_PreviousGroup {
	if this != nil {
		return this.PreviousGroupPrivateKeys
	}
	return nil
}

func (this *State) GetGeneration() uint32 {
	if this != nil && this.Generation != nil {
		return *this.Generation
	}
	return 0
}

func (this *State) GetLastErasureStorageTime() int64 {
	if this != nil && this.LastErasureStorageTime != nil {
		return *this.LastErasureStorageTime
	}
	return 0
}

func (this *State) GetContacts() []*Contact {
	if this != nil {
		return this.Contacts
	}
	return nil
}

func (this *State) GetInbox() []*Inbox {
	if this != nil {
		return this.Inbox
	}
	return nil
}

func (this *State) GetOutbox() []*Outbox {
	if this != nil {
		return this.Outbox
	}
	return nil
}

func (this *State) GetDrafts() []*Draft {
	if this != nil {
		return this.Drafts
	}
	return nil
}

type State_PreviousGroup struct {
	Group            []byte `protobuf:"bytes,1,req,name=group" json:"group,omitempty"`
	GroupPrivate     []byte `protobuf:"bytes,2,req,name=group_private" json:"group_private,omitempty"`
	Expired          *int64 `protobuf:"varint,3,req,name=expired" json:"expired,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (this *State_PreviousGroup) Reset()         { *this = State_PreviousGroup{} }
func (this *State_PreviousGroup) String() string { return proto.CompactTextString(this) }
func (*State_PreviousGroup) ProtoMessage()       {}

func (this *State_PreviousGroup) GetGroup() []byte {
	if this != nil {
		return this.Group
	}
	return nil
}

func (this *State_PreviousGroup) GetGroupPrivate() []byte {
	if this != nil {
		return this.GroupPrivate
	}
	return nil
}

func (this *State_PreviousGroup) GetExpired() int64 {
	if this != nil && this.Expired != nil {
		return *this.Expired
	}
	return 0
}

func init() {
}
